-- Forsaken

local Translations = {["Key"] = "卡密meow",
    ["Generators"] = "发电机",
    ["Player"] = "玩家",
    ["Misc"] = "杂项",
    ["Rage"] = "狂暴",
    ["Aiming"] = "瞄准",
    ["Autoblock"] = "自动格挡",
    ["Music"] = "音乐",
    ["UI Settings"] = "界面设置",
    ["I'm not cheating bro"] = "我没开",
    ["Executor"] = "注入器",
    ["You used the script"] = "你已使用脚本",
    ["Support Server"] = "支持服务器",
    ["Information"] = "信息",
    ["Fartsaken"] = "Fartsaken(XQ汉化)",
    ["Script is updated"] = "脚本已更新",
    ["Developers"] = "开发者",
    ["Contributors"] = "贡献者",
    ["Settings"] = "设置",
    ["ESP"] = "透视",
    ["Items"] = "物品",
    ["Minions"] = "小弟",
    ["Projectile"] = "空间地雷",
    ["Traps"] = "绊线钩",
    ["World"] = "世界",
    ["Disable Blur"] = "禁用模糊",
    ["Full Bright"] = "全亮",
    ["Self"] = "自身",
    ["Effects"] = "效果",
    ["Princess Mode"] = "安全模式",
    ["Field of View"] = "视野范围",
    ["Chams"] = "角色着色",
    ["Text ESP"] = "文本透视",
    ["Outline Transparency"] = "轮廓透明度",
    ["Fill Transparency"] = "填充透明度",
    ["Chams Depth Mode"] = "着色模式",
    ["AlwaysOnTop"] = "置顶",
    ["Occluded"] = "置底",
    ["Remove Health Glitch"] = "移除生命力故障",
    ["Delete John Doe's Footprint"] = "移除约翰足迹",
    ["Disable Subspace Effect"] = "禁用空间地雷眩晕",
    ["Disable Noli Halucinations"] = "禁用Noli幻觉",
    ["Distance"] = "距离",
    ["Inventory"] = "背包",
    ["Tracers"] = "追踪线",
    ["Tracer Start Position"] = "追踪线起始位置",
    ["Bottom"] = "底部",
    ["Top"] = "顶部",
    ["Middle"] = "中间",
    ["Offscreen Arrows"] = "屏幕外箭头",
    ["Arrow Size"] = "箭头大小",
    ["Arrow Radius"] = "箭头半径",
    ["Names"] = "名字",
    ["Text Size"] = "文本大小",
    ["Text Font"] = "文本字体",
    ["Healthy"] = "健康",
    ["Dying"] = "濒死",
    ["Health Bars"] = "生命条",
    ["Boxes"] = "碰撞箱",
    ["Auto Solve Generators and other generator stuff."] = "自动修机和其它发电机功能",
    ["Auto Generator"] = "自动修机",
    ["Auto Solve Generator"] = "自动修机",
    ["Generator Helper"] = "发电机助手",
    ["Generator Backgrounds"] = "发电机背景",
    ["Background Video"] = "背景视频",
    ["Video Volume"] = "视频音量",
    ["Generator Solve Delay"] = "自动修机间隔",
    ["Seconds"] = "秒",
    ["Generator Delay Randomness"] = "发电机延迟随机性",
    ["Player Character Functions"] = "玩家角色功能",
    ["Walkspeed Multiplier"] = "移动速度倍数",
    ["Walkspeed"] = "移动速度",
    ["Multiplier"] = "倍数",
    ["Walkspeed Type"] = "移速类型",
    ["Type"] = "类型",
    ["Blatant"] = "演都不演",
    ["Legit"] = "演一下",
    ["Speed"] = "速度",
    ["Stamina"] = "体力",
    ["Actions"] = "动作",
    ["Abilities"] = "技能",
    ["Disable Slowness Modifiers"] = "禁用减速",
    ["Ragdoll"] = "布娃娃",
    ["Frontflip"] = "前空翻",
    ["Note: Stamina changes apply after round ends"] = "注意：耐力更改将在回合结束后生效",
    ["Infinite Stamina"] = "无限体力",
    ["Stamina Gain Speed"] = "体力恢复速度",
    ["Max Stamina"] = "最大体力",
    ["Invisibility"] = "隐身",
    ["Better Noli Controls"] = "Noli开车无转弯限制",
    ["Miscellaneous functions and utilities."] = "杂项功能和实用工具",
    ["General"] = "通用",
    ["Streamer Mode"] = "主播模式",
    ["Show Hidden Stats"] = "显示隐藏属性",
    ["Delete Killer Only Walls"] = "删除仅杀手可通过的墙",
    ["Visibility"] = "可见性",
    ["Toggle Chat Visibility"] = "聊天可见",
    ["Anti Features"] = "反特性",
    ["Anti Auto 404"] = "反自动404",
    ["Anti Autoblock"] = "反自动格挡",
    ["Device"] = "设备",
    ["Spoof Device"] = "伪装设备",
    ["TopBar Buttons"] = "顶部栏按钮",
    ["Fake Block"] = "假格挡",
    ["Misc Rage Functions"] = "杂项狂暴功能",
    ["Auto Screen Popups"] = "自动点弹窗",
    ["Anti Reach"] = "防范围攻击",
    ["Shedletsky Fling Sword"] = "谢德飞剑",
    ["Reach"] = "攻击范围",
    ["Reach Characters"] = "启用攻击范围的角色",
    [" Prediction"] = "预测",
    ["Strength"] = "强度",
    [" Delay"] = "延迟",
    ["Aimbot and aiming assistance features"] = "自瞄及辅助瞄准",
    ["Aimbot"] = "自瞄",
    ["TwoTime Look Same Direction"] = "两次看同一方向",
    ["Aimbot Characters"] = "自动瞄准角色",
    ["Silent Aim"] = "静默瞄准",
    ["Silent Aim Characters"] = "静默瞄准角色",
    ["Aimbot Priority"] = "自瞄优先级",
    ["Priority"] = "优先级",
    ["Nearest"] = "最近目标",
    ["Closest To Cursor"] = "最接近光标",
    ["FOV Circle Radius"] = "自瞄圈圈",
    ["FOV Circle Transparency"] = "自瞄圈圈透明度",
    ["FOV Circle Color"] = "自瞄圈圈颜色",
    ["Aimbot Prediction"] = "预判自瞄",
    ["Aimbot Rotation Speed"] = "自瞄速度",
    ["Aimbot Max Distance"] = "自瞄最远距离",
    ["Studs"] = "格",
    ["This will change how aimbot selects targets, inside the circle or the closest to you."] = "这将改变自动瞄准选择目标的方式，在圆圈内或离你最近的目标。",
    ["Home"] = "主页",
    ["Visuals"] = "视觉",
    ["Aimbot Type"] = "自瞄类型",
    ["Character Aimbot"] = "角色自瞄",
    ["Silent Aim Prediction Strength"] = "静默瞄准预测强度",
    ["Dusekkar Aim Target"] = "南瓜头技能瞄准目标",
    ["Dusekkar Wallbang"] = "南瓜头穿墙攻击",
    ["Main"] = "主要",
    ["Survivor Autoblock"] = "幸存者自动格挡",
    ["Block Projectiles"] = "格挡远程攻击",
    ["Killer Autoblock"] = "杀手自动格挡",
    ["Config"] = "配置",
    ["Hitbox"] = "攻击碰撞箱",
    ["Characters"] = "角色",
    ["Autoblock Hitbox Multiplier"] = "自动格挡碰撞箱倍数",
    ["Autoblock Hitbox Transparency"] = "自动格挡命中箱透明度",
    ["AB Hitbox Color"] = "命中箱颜色",
    ["Hitbox Preview"] = "命中箱预览",
    ["Autoblock Characters"] = "自动格挡角色",
    }

local function translateText(text)
    if not text or type(text) ~= "string" then return text end
    
    if Translations[text] then
        return Translations[text]
    end
    
    for en, cn in pairs(Translations) do
        if text:find(en) then
            return text:gsub(en, cn)
        end
    end
    
    return text
end

local function setupTranslationEngine()
    local success, err = pcall(function()
        local oldIndex = getrawmetatable(game).__newindex
        setreadonly(getrawmetatable(game), false)
        
        getrawmetatable(game).__newindex = newcclosure(function(t, k, v)
            if (t:IsA("TextLabel") or t:IsA("TextButton") or t:IsA("TextBox")) and k == "Text" then
                v = translateText(tostring(v))
            end
            return oldIndex(t, k, v)
        end)
        
        setreadonly(getrawmetatable(game), true)
    end)
    
    if not success then
        warn("元表劫持失败:", err)
       
        local translated = {}
        local function scanAndTranslate()
            for _, gui in ipairs(game:GetService("CoreGui"):GetDescendants()) do
                if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                    pcall(function()
                        local text = gui.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                gui.Text = translatedText
                                translated[gui] = true
                            end
                        end
                    end)
                end
            end
            
            local player = game:GetService("Players").LocalPlayer
            if player and player:FindFirstChild("PlayerGui") then
                for _, gui in ipairs(player.PlayerGui:GetDescendants()) do
                    if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                        pcall(function()
                            local text = gui.Text
                            if text and text ~= "" then
                                local translatedText = translateText(text)
                                if translatedText ~= text then
                                    gui.Text = translatedText
                                    translated[gui] = true
                                end
                            end
                        end)
                    end
                end
            end
        end
        
        local function setupDescendantListener(parent)
            parent.DescendantAdded:Connect(function(descendant)
                if descendant:IsA("TextLabel") or descendant:IsA("TextButton") or descendant:IsA("TextBox") then
                    task.wait(0.1)
                    pcall(function()
                        local text = descendant.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                descendant.Text = translatedText
                            end
                        end
                    end)
                end
            end)
        end
        
        pcall(setupDescendantListener, game:GetService("CoreGui"))
        local player = game:GetService("Players").LocalPlayer
        if player and player:FindFirstChild("PlayerGui") then
            pcall(setupDescendantListener, player.PlayerGui)
        end
        
        while true do
            scanAndTranslate()
            task.wait(3)
        end
    end
end

task.wait(2)

setupTranslationEngine()

local success, err = pcall(function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/ivannetta/ShitScripts/main/forsaken.lua"))()
end)

if not success then
    warn("加载失败:", err)
end
